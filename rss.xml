<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Forked</title><link>https://pspiagicw.github.io/</link><description>Fork all worries away</description><atom:link href="https://pspiagicw.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2021 &lt;a href="mailto:pspiagicw@gmail.com"&gt;pspiagicw&lt;/a&gt; </copyright><lastBuildDate>Sat, 15 May 2021 03:07:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>My cool new setup!</title><link>https://pspiagicw.github.io/posts/my-cool-new-setup/</link><dc:creator>pspiagicw</dc:creator><description>&lt;div id="outline-container-orgfb19aac" class="outline-2"&gt;
&lt;h2 id="orgfb19aac"&gt;Linux is Sexy!&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfb19aac"&gt;
&lt;p&gt;
My love for linux grows , day by day . It has the freedon that nobody can provide.
Well I don't think anybody thinks of making a car from scratch . 
Nor somebody talks how they would like to reconfigure their driving style for more productivity.
&lt;/p&gt;

&lt;p&gt;
But in the Linux world this type of talk is very common.Due to a abundance of system-level packages we can customize our workflow with custom scripts,apps,etc.
&lt;/p&gt;

&lt;p&gt;
I always kept a GUI handy , kept a second OS or a second account with working GUI if anything went wrong with my tiling window manager setup.
I kept my college/school things in that account , I did not mix it with my coding/fun account.
&lt;/p&gt;

&lt;p&gt;
&lt;span class="underline"&gt;Until Now&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
The biggest problem with my previous setup was I had to switch accounts or even OS for coding or attending classes.
This time I decided to integrate both.
&lt;/p&gt;

&lt;p&gt;
Now I had a choice , whether to keep a minimal setup with some GUI apps , or to keep only the required GUI apps.
I decided to go with the obvious no GUI apps.
&lt;/p&gt;

&lt;p&gt;
The only GUI app I am using is for my classes.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdbfbe8f" class="outline-3"&gt;
&lt;h3 id="orgdbfbe8f"&gt;Keyboard is priority&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdbfbe8f"&gt;
&lt;p&gt;
When making any setup , I make sure to remember all the keybindings,so that I can make things fast.
Well with linux , you don't have to remember keybindings, you make keybindings.
&lt;/p&gt;

&lt;p&gt;
I don't think anyone in the Windows/MacOS world thinkgs in this way!Create Keybindings?
&lt;/p&gt;

&lt;p&gt;
For my display manager I went with nothing, a simple &lt;code&gt;/etc/issue&lt;/code&gt; file suffice for bling.
My &lt;code&gt;bash_profile&lt;/code&gt; automatically starts the window manager on login.
&lt;/p&gt;

&lt;p&gt;
My window manager of choice is &lt;i&gt;XMonad&lt;/i&gt; .It is fast , very customizable and is written in haskell.
My bar to go with it was &lt;i&gt;xmobar&lt;/i&gt; . It provides lot of built-in widgets which makes it perfect, along with the fact that it is designed to work with xmonad.
&lt;/p&gt;

&lt;p&gt;
My text editor has been emacs for the last month now and I rolled with it.Vim already spoiled me , that means I went Evil on Emacs.
If you cannot understand that reference then you must join the dark side.I will not debate Emacs V/s Vim, but can say Emacs is good.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org624edf4" class="outline-3"&gt;
&lt;h3 id="org624edf4"&gt;My Apps&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org624edf4"&gt;
&lt;p&gt;
My other apps include:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://qutebrowser.org"&gt;QuteBrowser&lt;/a&gt;&lt;/i&gt;: Web Browser with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://pwmt.org/projects/zathura/"&gt;Zathura&lt;/a&gt;&lt;/i&gt;: PDF Viewer with vim keybindings&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://feh.finalrewind.org/"&gt;feh&lt;/a&gt;&lt;/i&gt;: Image viewer with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://neomutt.org/"&gt;Neomutt&lt;/a&gt;&lt;/i&gt;: Terminal Mail Client with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://newsboat.org/"&gt;NewsBoat&lt;/a&gt;&lt;/i&gt;: Terminal RSS feed reader with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://github.com/dylanaraps/torque"&gt;torque&lt;/a&gt;&lt;/i&gt;: Terminal torrent manager with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://github.com/alacritty/alacritty"&gt;Alacritty&lt;/a&gt;&lt;/i&gt;: My terminal of choice comes with vim keybindings.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://github.com/firecat53/urlscan"&gt;Urlscan&lt;/a&gt;&lt;/i&gt;: Terminal Url Scanner and indexer with vim keybindings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
One of the common things among apps is to have vim keybindings.
&lt;/p&gt;

&lt;p&gt;
It means all of them can be controlled by the keyboard and I flow through those apps without a hitch.
I even synced all the keybindings between them to allow seamless usage.
For Example pressing &lt;code&gt;h&lt;/code&gt; always goes back no matter what , pressing &lt;code&gt;l&lt;/code&gt; goes forward no matter what.
Pressing L on any page , opens urlscan  no matter what,independent of apps
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge4554a3" class="outline-3"&gt;
&lt;h3 id="orge4554a3"&gt;Aesthetics&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge4554a3"&gt;
&lt;p&gt;
For aesthetics I don't have much to offer.I used dracula themes from &lt;a href="https://draculatheme.com"&gt;draculatheme.com&lt;/a&gt; as I love it.
Other aesthetics include
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://github.com/jonaburg/picom"&gt;Picom&lt;/a&gt;&lt;/i&gt; (Jonaburg Fork): For animations , transparency , curved corners etc.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://dunst-project.org/"&gt;Dunst&lt;/a&gt;&lt;/i&gt;: Notification Manager&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="https://github.com/Airblader/unclutter-xfixes"&gt;Unclutter&lt;/a&gt;&lt;/i&gt;: Mouse dissapear when not using.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;&lt;a href="http://jonls.dk/redshift/"&gt;redshift&lt;/a&gt;&lt;/i&gt;: Night light support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I think I can go on about how perfect my setup looks.
If you want to checkout my config , it's &lt;a href="https://github.com/pspiagicw/dotfiles"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org57309c1" class="outline-3"&gt;
&lt;h3 id="org57309c1"&gt;GoodBye!&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org57309c1"&gt;
&lt;p&gt;
Keep being curious , Over and Out!
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><guid>https://pspiagicw.github.io/posts/my-cool-new-setup/</guid><pubDate>Sat, 15 May 2021 00:58:53 GMT</pubDate></item><item><title>Write a blog they said!</title><link>https://pspiagicw.github.io/posts/write-a-blog-they-said/</link><dc:creator>pspiagicw</dc:creator><description>&lt;div id="outline-container-orga553a29" class="outline-2"&gt;
&lt;h2 id="orga553a29"&gt;Write a blog they said&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga553a29"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org567ce0f" class="outline-3"&gt;
&lt;h3 id="org567ce0f"&gt;Read a book!&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org567ce0f"&gt;
&lt;p&gt;
I love reading technical books which are non-serious , and cater towards casual learners.It provides the most honest perspective for anyone reading.
Well the most recent one was &lt;span class="underline"&gt;Grokking Deep Learning&lt;/span&gt; , which provides excellent intro to the world of Deep Learning
&lt;/p&gt;

&lt;p&gt;
The end of that book suggests to improve our knowledge,understanding of Deep Learning , by starting a blog about Deep Learning.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Well&lt;/b&gt; I can't deny the idea , I am very scared to execute it , a blog about Deep Learning , a topic almost anyone can understand from a few &lt;a href="https://google.com"&gt;Google&lt;/a&gt; Sessions.
&lt;/p&gt;

&lt;p&gt;
Now that I have started a blog , this post might be the perfect session to start Deep Learning blogs.I can throw a little Machine Learning in there,
it would have a lot of coding.I have no idea how this will turn out.
&lt;/p&gt;

&lt;p&gt;
If it's bad , then you might be the rare people who read it , or if it's good you might be not so alone afterall.
&lt;/p&gt;

&lt;p&gt;
Anyway let's start the &lt;a href="https://en.wikipedia.org/wiki/SpaceX_Raptor"&gt;Raptors&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcfa8351" class="outline-3"&gt;
&lt;h3 id="orgcfa8351"&gt;Machine Learning&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcfa8351"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org827236d" class="outline-4"&gt;
&lt;h4 id="org827236d"&gt;Getting Started&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org827236d"&gt;
&lt;p&gt;
Well I could start with the theoretical aspects of Machine Learning , or I can start giving code , along with explanations.
&lt;/p&gt;

&lt;p&gt;
I think I will go with the latter.
&lt;/p&gt;

&lt;p&gt;
For getting started , we need some Packages , Python Packages.Most of Machine Learning is done in Python , it is easy , readable and has good ecosystem.
Well if you are starting with Python, you can learn it and come to this later.
&lt;/p&gt;

&lt;p&gt;
Well we need to install Python Packages using &lt;span class="underline"&gt;&lt;a href="https://pypi.org/project/pip/"&gt;pip&lt;/a&gt;&lt;/span&gt;. Well don't worry it comes with almost all Python installations.The packages we need are
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Numpy: Numerical-Python, provides base for writing mathematical/scientific based code.&lt;/li&gt;
&lt;li&gt;Matplotlib: Graphing tool , provides way to create complex graph and heatmaps.&lt;/li&gt;
&lt;li&gt;Sklearn: Sckit-leaern , the base on which Machine Learning exists.&lt;/li&gt;
&lt;li&gt;Pandas: Tool to interact with tabular data(CSV,XLSX,etc).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
I am coding on a generic GNU/Linux distribution , any commands/code I write will work on all platforms  provided you have Python on your PATH variable.
For installing above packages use the &lt;span class="underline"&gt;pip&lt;/span&gt; command.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/installing-packages.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
Now that we have packages installed,let's create a new python file and begin.People wanting to use Jupyter Notebook etc, don't judge me!
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org22dd5fa" class="outline-4"&gt;
&lt;h4 id="org22dd5fa"&gt;Data Collection&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org22dd5fa"&gt;
&lt;p&gt;
We need to have data to start Machine Learning.Lucky for us &lt;span class="underline"&gt;sklearn&lt;/span&gt; already includes some datasets.
A dataset is a collection of tabular data along with information on source of the data.
&lt;/p&gt;

&lt;p&gt;
We are going to use moons dataset , it is a simple dataset , it tries to give data about two intersecting circles(Moons!).
To use it we have to invoke &lt;code&gt;make_moons()&lt;/code&gt; method from &lt;code&gt;sklearn.datasets&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/make-moons.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
It returns a tuple with first field being the input data(Data we know) and second field being output data(Data we want to know about).
Here we want to predict whether the circles intersect or not, given their position.
&lt;/p&gt;

&lt;p&gt;
Let's divide it into input and output variables.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/divide-input.png" alt="nil"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgba5f587" class="outline-4"&gt;
&lt;h4 id="orgba5f587"&gt;Training&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgba5f587"&gt;
&lt;p&gt;
We will use K-Nearest Neighbors algorithm, it's internal working will be explained later.The important thing , being it is used to Classify.First let's import it.
It is provided in &lt;code&gt;sklearn.neighbors.KNeighborsClassifier&lt;/code&gt; .
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/import-neighbors.png" alt="nil"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgad900d8" class="outline-4"&gt;
&lt;h4 id="orgad900d8"&gt;Testing&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgad900d8"&gt;
&lt;p&gt;
Using this model is easy , for training call the &lt;span class="underline"&gt;fit&lt;/span&gt; method and testing use the &lt;span class="underline"&gt;score&lt;/span&gt; method.Don't worry about why and what we are doing here!
Using the score method gives us accuracy , which will tell how good our model is. &lt;i&gt;Higher the Better!&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Tough we are not using &lt;code&gt;score()&lt;/code&gt; method today , cause we don't have any testing data!!
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/train-score-knn.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
But we can make predictions for ourselves, as the model is trained on the data , it can make accurate predictions , without any problem.
To make predictions we use the &lt;code&gt;predict&lt;/code&gt; method.We can pass data is same way input has in an array of two numbers , which can be used which can be used to predict if they are parameters of an intersecting circle.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://pspiagicw.github.io/images/predict.png" alt="nil"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-orgb733ef8" class="outline-3"&gt;
&lt;h3 id="orgb733ef8"&gt;Farewell!&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb733ef8"&gt;
&lt;p&gt;
Let us meet again in the next post where we will learn more about Machine Learning in general.We will have a lot of fun, so don't miss it!
&lt;/p&gt;

&lt;p&gt;
&lt;span class="underline"&gt;Bye for now&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>machinelearning</category><guid>https://pspiagicw.github.io/posts/write-a-blog-they-said/</guid><pubDate>Fri, 14 May 2021 23:46:01 GMT</pubDate></item><item><title>A world full of SSG's</title><link>https://pspiagicw.github.io/posts/a-world-full-of-ssgs/</link><dc:creator>pspiagicw</dc:creator><description>&lt;section id="blog-dilemma"&gt;
&lt;h2&gt;Blog Dilemma&lt;/h2&gt;
&lt;section id="making-a-blog-is-hard"&gt;
&lt;h3&gt;Making a blog is hard!&lt;/h3&gt;
&lt;p&gt;The amount of preparation for a stable SSG system is crazy!
Well SSG stands for Static Site Generators.&lt;/p&gt;
&lt;p&gt;They allow anyone to have a solid and efficient way of writing blogs.
The biggest problem being , which to choose.&lt;/p&gt;
&lt;p&gt;Some are huge , some are written in other languages , some are discontinued.&lt;/p&gt;
&lt;p&gt;Well right now I am using &lt;em&gt;Nikola&lt;/em&gt; . It is a python based SSG which worked well enough for me.
I intend to push this to GitHub but I cannot promise it will happen!&lt;/p&gt;
&lt;p&gt;Well if you are reading it , it has already happened , or has it?
Writing from this perspective , anything can happen.This post can just be a RST document in my system or this can be read by anyone acessing the internet.&lt;/p&gt;
&lt;p&gt;Whatever may happen , I have already read it which means the post will die with me irrespective of the outcome.&lt;/p&gt;
&lt;p&gt;Just like Neil already saw the moon. It did not matter whether NASA showed it to everyone , the sight would always be in Neil's neurons.&lt;/p&gt;
&lt;p&gt;Enough talking , I have to try posting this.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><guid>https://pspiagicw.github.io/posts/a-world-full-of-ssgs/</guid><pubDate>Fri, 14 May 2021 09:41:24 GMT</pubDate></item></channel></rss>